openapi: 3.0.3
info:
  title: BottleCRM API
  version: 1.0.0
  description: Open source CRM application
paths:
  /api/accounts/:
    get:
      operationId: accounts_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/{id}/:
    get:
      operationId: accounts_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: header
        name: org
        schema:
          type: integer
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_create_2
      parameters:
      - in: query
        name: account_attachment
        schema:
          type: string
      - in: query
        name: comment
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: header
        name: org
        schema:
          type: integer
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: accounts_update
      parameters:
      - in: query
        name: account_attachment
        schema:
          type: string
      - in: query
        name: assigned_to
        schema:
          type: string
      - in: query
        name: billing_address_line
        schema:
          type: string
      - in: query
        name: billing_city
        schema:
          type: string
      - in: query
        name: billing_country
        schema:
          type: string
      - in: query
        name: billing_postcode
        schema:
          type: string
      - in: query
        name: billing_state
        schema:
          type: string
      - in: query
        name: billing_street
        schema:
          type: string
      - in: query
        name: contacts
        schema:
          type: string
      - in: query
        name: email
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: lead
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: integer
      - in: query
        name: phone
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - close
          - open
      - in: query
        name: tags
        schema:
          type: string
      - in: query
        name: teams
        schema:
          type: string
      - in: query
        name: website
        schema:
          type: string
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: header
        name: org
        schema:
          type: integer
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/{id}/create_mail/:
    post:
      operationId: accounts_create_mail_create
      parameters:
      - in: query
        name: from_email
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: message_body
        schema:
          type: string
      - in: query
        name: message_subject
        schema:
          type: string
      - in: header
        name: org
        schema:
          type: integer
      - in: query
        name: recipients
        schema:
          type: string
      - in: query
        name: scheduled_date_time
        schema:
          type: string
      - in: query
        name: scheduled_later
        schema:
          type: string
      - in: query
        name: timezone
        schema:
          type: string
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/attachment/{id}/:
    delete:
      operationId: accounts_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: header
        name: org
        schema:
          type: integer
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/comment/{id}/:
    put:
      operationId: accounts_comment_update
      parameters:
      - in: query
        name: comment
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: header
        name: org
        schema:
          type: integer
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: accounts_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: header
        name: org
        schema:
          type: integer
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/api-settings/:
    get:
      operationId: api_settings_retrieve
      description: Domain List
      tags:
      - api-settings
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_settings_create
      tags:
      - api-settings
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/api-settings/{id}/:
    get:
      operationId: api_settings_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api-settings
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_settings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api-settings
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_settings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api-settings
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/create-org/:
    get:
      operationId: auth_create_org_retrieve
      description: Just Pass the token, will return ORG list, associated with user
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgProfileCreate'
          description: ''
    post:
      operationId: auth_create_org_create
      description: Organization and profile Creation api
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrgProfileCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgProfileCreate'
          description: ''
  /api/auth/forgot-password/:
    post:
      operationId: auth_forgot_password_create
      description: Forget Password Api
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPassword'
          description: ''
  /api/auth/google/:
    post:
      operationId: auth_google_create
      description: Login through Google
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: API authentication using login & password
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginSealizerRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSealizer'
          description: ''
  /api/auth/register/:
    post:
      operationId: auth_register_create
      description: API authentication using login & password
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterOrganizationRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterOrganization'
          description: ''
  /api/auth/resend-activation-link/:
    post:
      operationId: auth_resend_activation_link_create
      description: Re-Send activation link
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/reset-password/{uid}/{token}/:
    post:
      operationId: auth_reset_password_create
      description: Reset Password
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/cases/:
    get:
      operationId: cases_retrieve
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: cases_create
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/cases/{id}/:
    get:
      operationId: cases_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: cases_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: cases_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: cases_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/cases/attachment/{id}/:
    delete:
      operationId: cases_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/cases/comment/{id}/:
    put:
      operationId: cases_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: cases_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cases
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/contacts/:
    get:
      operationId: contacts_retrieve
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: contacts_create
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/contacts/{id}/:
    get:
      operationId: contacts_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: contacts_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: contacts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: contacts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/contacts/attachment/{id}/:
    delete:
      operationId: contacts_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/contacts/comment/{id}/:
    put:
      operationId: contacts_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: contacts_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/dashboard/:
    get:
      operationId: dashboard_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/documents/:
    get:
      operationId: documents_retrieve
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: documents_create
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/documents/{id}/:
    get:
      operationId: documents_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/events/:
    get:
      operationId: events_retrieve
      description: User account registration
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: events_create
      description: User account registration
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/events/{id}/:
    get:
      operationId: events_retrieve_2
      description: User account registration
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: events_create_2
      description: User account registration
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: events_update
      description: User account registration
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: events_destroy
      description: User account registration
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/events/attachment/{id}/:
    delete:
      operationId: events_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/events/comment/{id}/:
    put:
      operationId: events_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: events_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/leads/:
    get:
      operationId: leads_retrieve
      tags:
      - Leads
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: leads_create
      description: Leads Create
      tags:
      - leads
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/leads/{id}/:
    get:
      operationId: leads_retrieve_2
      description: Lead Detail
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - leads
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: leads_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - leads
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: leads_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - leads
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: leads_destroy
      description: Lead Delete
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - leads
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/leads/attachment/{id}/:
    delete:
      operationId: leads_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - leads
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/leads/comment/{id}/:
    put:
      operationId: leads_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - leads
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: leads_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - leads
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/leads/create-from-site/:
    post:
      operationId: leads_create_from_site_create
      tags:
      - leads
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/leads/upload/:
    post:
      operationId: leads_upload_create
      tags:
      - Leads
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/opportunities/:
    get:
      operationId: opportunities_retrieve
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: opportunities_create
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/opportunities/{id}/:
    get:
      operationId: opportunities_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: opportunities_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: opportunities_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: opportunities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/opportunities/attachment/{id}/:
    delete:
      operationId: opportunities_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/opportunities/comment/{id}/:
    put:
      operationId: opportunities_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: opportunities_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - opportunities
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/profile/:
    get:
      operationId: profile_retrieve
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/profile/change-password/:
    post:
      operationId: profile_change_password_create
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/:
    get:
      operationId: tasks_retrieve
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: tasks_create
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: tasks_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/attachment/{id}/:
    delete:
      operationId: tasks_attachment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/comment/{id}/:
    put:
      operationId: tasks_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: tasks_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/teams/:
    get:
      operationId: teams_retrieve
      tags:
      - teams
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: teams_create
      tags:
      - teams
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/teams/{id}/:
    get:
      operationId: teams_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: teams_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: teams_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: users_create
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/users/{id}/:
    get:
      operationId: users_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{id}/status/:
    post:
      operationId: users_status_create
      description: User Status View
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/users/get-teams-and-users/:
    get:
      operationId: users_get_teams_and_users_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    ForgotPassword:
      type: object
      properties:
        email:
          type: string
          maxLength: 200
      required:
      - email
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
          minLength: 1
          maxLength: 200
      required:
      - email
    LoginSealizer:
      type: object
      properties:
        email:
          type: string
          maxLength: 255
        access_token:
          type: string
          readOnly: true
        refresh_token:
          type: string
          readOnly: true
      required:
      - access_token
      - email
      - refresh_token
    LoginSealizerRequest:
      type: object
      properties:
        email:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
      required:
      - email
      - password
    OrgProfileCreate:
      type: object
      description: It is for creating organization
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        user_limit:
          type: string
          maxLength: 255
        country:
          type: string
          maxLength: 255
      required:
      - address
      - country
      - id
      - name
      - user_limit
    OrgProfileCreateRequest:
      type: object
      description: It is for creating organization
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        address:
          type: string
          minLength: 1
          maxLength: 255
        user_limit:
          type: string
          minLength: 1
          maxLength: 255
        country:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - address
      - country
      - name
      - user_limit
    RegisterOrganization:
      type: object
      properties:
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 255
        password:
          type: string
          maxLength: 100
      required:
      - email
      - first_name
      - password
    RegisterOrganizationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        first_name:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - email
      - first_name
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
